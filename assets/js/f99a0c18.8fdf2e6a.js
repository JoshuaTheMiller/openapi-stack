"use strict";(self.webpackChunkopenapi_stack=self.webpackChunkopenapi_stack||[]).push([[2044],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},p=Object.keys(e);for(i=0;i<p.length;i++)n=p[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(i=0;i<p.length;i++)n=p[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),s=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,y=d["".concat(l,".").concat(m)]||d[m]||u[m]||p;return n?i.createElement(y,a(a({ref:t},c),{},{components:n})):i.createElement(y,a({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,a=new Array(p);a[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:r,a[1]=o;for(var s=2;s<p;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2827:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>p,metadata:()=>o,toc:()=>s});var i=n(7462),r=(n(7294),n(4137));const p={sidebar_position:3},a="Generating types",o={unversionedId:"openapi-client-axios/typegen",id:"openapi-client-axios/typegen",title:"Generating types",description:"openapi-client-axios comes with a tool called typegen to generate typescript type files (.d.ts) for",source:"@site/docs/openapi-client-axios/typegen.md",sourceDirName:"openapi-client-axios",slug:"/openapi-client-axios/typegen",permalink:"/docs/openapi-client-axios/typegen",draft:!1,editUrl:"https://github.com/epilot-dev/docs/edit/main/docs/openapi-client-axios/typegen.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/docs/openapi-client-axios/usage"},next:{title:"Quick Start",permalink:"/docs/openapicmd/intro"}},l={},s=[{value:"Typesafe Clients",id:"typesafe-clients",level:2},{value:"Importing Schemas",id:"importing-schemas",level:2}],c={toc:s},d="wrapper";function u(e){let{components:t,...p}=e;return(0,r.kt)(d,(0,i.Z)({},c,p,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"generating-types"},"Generating types"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"openapi-client-axios")," comes with a tool called ",(0,r.kt)("inlineCode",{parentName:"p"},"typegen")," to generate typescript type files (.d.ts) for\nOpenAPIClient instances using an OpenAPI definition file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm install -g openapi-client-axios-typegen\n")),(0,r.kt)("p",null,"or with npx:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx openapi-client-axios-typegen\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"TypeScript IntelliSense",src:n(3133).Z,width:"768",height:"445"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Usage: typegen [file]\n\nOptions:\n  --help     Show help                                                 [boolean]\n  --version  Show version number                                       [boolean]\n\nExamples:\n  typegen ./openapi.yml > client.d.ts  - generate a type definition file\n  typegen https://openapistack.co/petstore.openapi.json > client.d.ts  - generate a type definition file\n")),(0,r.kt)("h2",{id:"typesafe-clients"},"Typesafe Clients"),(0,r.kt)("p",null,"The output of ",(0,r.kt)("inlineCode",{parentName:"p"},"typegen")," exports a type called ",(0,r.kt)("inlineCode",{parentName:"p"},"Client"),", which can be used for instances created with ",(0,r.kt)("inlineCode",{parentName:"p"},"OpenAPIClientAxios"),"."),(0,r.kt)("p",null,"Both the ",(0,r.kt)("inlineCode",{parentName:"p"},"api.getClient()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"api.init()")," methods support passing in a Client type."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Client as PetStoreClient } from "./client.d.ts";\n\nconst client = await api.init<PetStoreClient>();\nconst client = await api.getClient<PetStoreClient>();\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"typegen")," supports using both local and remote URLs for OpenAPI definition files."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"typegen ./openapi.yaml > client.d.ts # local file\ntypegen https://petstore3.swagger.io/api/v3/openapi.json > client.d.ts # remote url\n")),(0,r.kt)("h2",{id:"importing-schemas"},"Importing Schemas"),(0,r.kt)("p",null,"You can also import any individual schemas defined in your openapi definition as types:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'//\nimport { Components } from "./client.d.ts"\n\nexport type\n')))}u.isMDXComponent=!0},3133:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/intellisense-b61ace10fd35746dd5bfefa977c0645e.gif"}}]);